/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'robertoflores' at '5/2/17 8:06 PM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

apply plugin: 'java'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.21'
    testCompile 'junit:junit:4+'
    
	compile fileTree(dir: 'libs', include: '*.jar')
//	compile files("./libs/jplag-2.11.9-SNAPSHOT-jar-with-dependencies.jar")
}

version     = '1.0.0'
description = """
GUI for JPlag
Project name: ${project.name}
More Information on JPlag   at <https://github.com/jplag>
More information on JPlagUI at <https://github.com/robertoaflores/JPlagUI>
"""

task jarSwing (type: Jar, description: "Builds an executable Swing jar ") {
    group "build"
    baseName = "jplaguiSwing"
    version  = "1.1"
    
   	manifest {
       	attributes \
           	'Main-Class' : 'edu.cnu.cs.jplagui.swing.JPlagUI', \
           	'Implementation-Title' : baseName, \
           	'Implementation-Version' : version, \
           	'Built-By': System.getProperty('user.name'), \
           	'Built-JDK': System.getProperty('java.version'), \
           	'Build-Time': new Date().format("yyyy-MM-dd' 'HH:mm:ss")
   	}
   	from {
		configurations.compile.collect {
			it.isDirectory() ? it : zipTree(it)
		}
   	} with jar
}
task jarFX (type: Jar, description: "Builds an executable Swing jar ") {
    group "build"
    baseName = "jplaguiFX"
    version  = "1.0"

	from('src/main/java/') {
		include '**/*.css'
		include '**/*.fxml'
	}

   	manifest {
       	attributes \
           	'Main-Class' : 'edu.cnu.cs.jplagui.javafx.JPlagUI', \
           	'Implementation-Title' : baseName, \
           	'Implementation-Version' : version, \
           	'Built-By': System.getProperty('user.name'), \
           	'Built-JDK': System.getProperty('java.version'), \
           	'Build-Time': new Date().format("yyyy-MM-dd' 'HH:mm:ss")
   	}
   	from {
		configurations.compile.collect {
			it.isDirectory() ? it : zipTree(it)
		}
   	} with jar
}
